create table
  public.bets (
    id bigint generated by default as identity not null,
    user_id uuid null default gen_random_uuid (),
    entrant_id bigint null,
    match_id bigint null,
    amount bigint not null default '0'::bigint,
    bet_placement_id bigint not null,
    constraint bets_pkey primary key (id),
    constraint bets_bet_placement_id_key unique (bet_placement_id),
    constraint bets_entrant_id_fkey foreign key (entrant_id) references entrants (id) on delete cascade,
    constraint bets_match_id_fkey foreign key (match_id) references matches (id) on delete cascade,
    constraint bets_user_id_fkey foreign key (user_id) references auth.users (id) on update cascade on delete cascade
  ) tablespace pg_default;

create table
  public.completed_games (
    game_id bigint generated by default as identity not null,
    completed_at timestamp with time zone not null default (now() at time zone 'pdt'::text),
    constraint completed_games_pkey primary key (game_id),
    constraint completed_games_game_id_fkey foreign key (game_id) references games (id) on delete cascade
  ) tablespace pg_default;

create table
  public.completed_matches (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    constraint completed_matches_pkey primary key (id),
    constraint completed_matches_id_fkey foreign key (id) references matches (id)
  ) tablespace pg_default;

create table
  public.completed_rounds (
    round_id bigint generated by default as identity not null,
    completed_at timestamp with time zone not null default (now() at time zone 'pdt'::text),
    constraint completed_rounds_pkey primary key (round_id),
    constraint completed_rounds_round_id_fkey foreign key (round_id) references rounds (id) on delete cascade
  ) tablespace pg_default;

create table
  public.entrants (
    id bigint generated by default as identity not null,
    game_id bigint not null,
    created_at timestamp with time zone not null default (now() at time zone 'pdt'::text),
    name text null,
    weapon text null,
    owner_id uuid null,
    constraint entrants_pkey primary key (id),
    constraint entrants_game_id_fkey foreign key (game_id) references games (id) on delete cascade,
    constraint entrants_owner_id_fkey foreign key (owner_id) references auth.users (id) on update cascade on delete cascade
  ) tablespace pg_default;

create table
  public.games (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default (now() at time zone 'pdt'::text),
    constraint games_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.match_losers (
    id bigint generated by default as identity not null,
    match_id bigint null,
    entrant_id bigint null,
    constraint match_losers_pkey primary key (id),
    constraint match_losers_entrant_id_fkey foreign key (entrant_id) references entrants (id) on delete cascade,
    constraint match_losers_match_id_fkey foreign key (match_id) references matches (id) on delete cascade
  ) tablespace pg_default;

create table
  public.match_stories (
    match_id bigint generated by default as identity not null,
    story text null,
    constraint match_stories_pkey primary key (match_id),
    constraint match_stories_match_id_fkey foreign key (match_id) references matches (id)
  ) tablespace pg_default;

create table
  public.match_victors (
    id bigint generated by default as identity not null,
    match_id bigint null,
    entrant_id bigint null,
    constraint match_victors_pkey primary key (id),
    constraint match_victors_entrant_id_fkey foreign key (entrant_id) references entrants (id) on delete cascade,
    constraint match_victors_match_id_fkey foreign key (match_id) references matches (id) on delete cascade
  ) tablespace pg_default;

create table
  public.matches (
    id bigint generated by default as identity not null,
    round_id bigint null,
    entrant_one bigint null,
    entrant_two bigint null,
    created_at timestamp with time zone not null default (now() at time zone 'pdt'::text),
    constraint matches_pkey primary key (id),
    constraint matches_entrant_one_fkey foreign key (entrant_one) references entrants (id) on delete cascade,
    constraint matches_entrant_two_fkey foreign key (entrant_two) references entrants (id) on delete cascade,
    constraint matches_round_id_fkey foreign key (round_id) references rounds (id) on delete cascade
  ) tablespace pg_default;

create table
  public.players (
    player_id bigint generated by default as identity not null,
    id uuid not null,
    game_id bigint not null,
    constraint players_game_id_fkey foreign key (game_id) references games (id),
    constraint players_id_fkey foreign key (id) references profiles (user_id)
  ) tablespace pg_default;

create table
  public.profiles (
    user_id uuid not null,
    username text null,
    constraint profiles_pkey primary key (user_id),
    constraint profiles_username_key unique (username),
    constraint profiles_user_id_fkey foreign key (user_id) references auth.users (id) on update cascade on delete cascade
  ) tablespace pg_default;

create table
  public.rounds (
    id bigint generated by default as identity not null,
    game_id bigint null,
    prev_round_id bigint null,
    constraint rounds_pkey primary key (id),
    constraint rounds_prev_round_id_key unique (prev_round_id),
    constraint rounds_game_id_fkey foreign key (game_id) references games (id) on delete cascade,
    constraint rounds_prev_round_id_fkey foreign key (prev_round_id) references rounds (id)
  ) tablespace pg_default;

create table
  public.user_balances (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default (now() at time zone 'pdt'::text),
    balance_change bigint not null default '0'::bigint,
    user_id uuid null,
    match_id bigint null,
    game_id bigint null,
    constraint user_balances_pkey primary key (id),
    constraint user_balances_match_id_fkey foreign key (match_id) references matches (id),
    constraint user_balances_user_id_fkey foreign key (user_id) references auth.users (id) on update cascade on delete cascade
  ) tablespace pg_default;

-- Views
-- DECIDED NOT TO USE VIEWS BECAUSE IT WAS SLOWER & ALSO NOT UTILIZING OUR INDEXES
-- entrants_leaderboards
-- CREATE VIEW entrants_leaderboard AS (
--   SELECT
--     entrants.game_id,
--     entrants.name AS entrant_name, 
--     entrants.weapon AS entrant_weapon, 
--     COUNT(match_victors.entrant_id) AS total_wins,
--     DENSE_RANK() OVER (ORDER BY COUNT(match_victors.entrant_id) DESC) AS rank
--   FROM entrants
--   JOIN match_victors ON match_victors.entrant_id = entrants.id
--   GROUP BY entrants.game_id, entrants.name, entrants.weapon
--   ORDER BY rank, total_wins DESC
-- )

-- -- users_leaderboards
-- CREATE VIEW users_leaderboard AS (
--   SELECT
--     rounds.game_id, 
--     username, 
--     SUM(balance_change) AS total_earnings,
--     DENSE_RANK() OVER (ORDER BY SUM(balance_change) DESC) AS rank
--   FROM profiles
--   JOIN user_balances ON user_balances.user_id = profiles.user_id
--   JOIN matches ON matches.id = user_balances.match_id
--   JOIN rounds ON rounds.id = matches.round_id
--   GROUP BY rounds.game_id, username
--   ORDER BY rank, total_earnings DESC
-- )

-- INDEXES FOR get_users_leaderboard endpoint
CREATE INDEX idx_rounds_game_id ON rounds(game_id);
CREATE INDEX idx_user_balances_match_id ON user_balances(match_id);
CREATE INDEX idx_matches_round_id ON matches(round_id);
